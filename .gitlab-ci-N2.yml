stages:
  - test
  - documentation

# This job tests the LIKWID.jl interface with Julia 1.7 on Noctua 2 @ PC2
julia/1.7-N2:
  stage: test
  tags:
    - bauerc-noctua2
  variables:
    SCHEDULER_PARAMETERS: "-N 1 -n 1 -c 128 -t 00:15:00 -A pc2-mitarbeiter -p fpga --exclusive"
    JULIA_NUM_THREADS: "12"
    GROUP: "CPU" # run only CPU tests (no GPU available as of now)
  rules:
    # - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "external_pull_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_BRANCH && $CI_PIPELINE_SOURCE == "external_pull_request_event"'
      when: never
    - if: '$CI_COMMIT_BRANCH' # trigger on commits
    - when: never # don't run otherwise
    # - if: '$CI_PIPELINE_SOURCE == "push"' # trigger on pushs
    # - if: '$CI_COMMIT_TAG' # trigger on tags? (only needed for docs)
  script:
    - echo $CI_PIPELINE_SOURCE
    - ml reset
    - ml tools/likwid/5.2.1-GCC-11.2.0
    #- ml lang/JuliaHPC/1.7.2-fosscuda-2022a-linux-x86_64
    - ml lang/Julia/1.7.3-linux-x86_64
    - likwid-topology
    - likwid-perfctr -i
    - likwid-perfctr -a
    - julia --color=yes --project=. -e 'using Pkg; Pkg.build(verbose=true); Pkg.test();'

# LIKWID.jl Documentation
build-and-deploy:
  stage: documentation
  tags:
    - bauerc-noctua2
  variables:
    SCHEDULER_PARAMETERS: "-N 1 -n 1 -c 128 -t 00:15:00 -A pc2-mitarbeiter -p fpga --exclusive"
    JULIA_NUM_THREADS: "12"
  script:
    - ml reset
    - ml tools/likwid/5.2.1-GCC-11.2.0
    # - ml lang/JuliaHPC/1.7.2-fosscuda-2022a-linux-x86_64
    - ml lang/Julia/1.7.3-linux-x86_64
    - likwid-topology
    - likwid-perfctr -i
    - likwid-perfctr -a
    - cd docs
    - julia --color=yes build_docs.jl
  allow_failure: false
